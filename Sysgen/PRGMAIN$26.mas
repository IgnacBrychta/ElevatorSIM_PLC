#srcfile 'C:\USERS\IGNáC\DOCUMENTS\PLC\WINTER_PLC\07_VYTAH\PRGMAIN.ST'

#defpou ResetAllButtons
  bool __fc__ResetAllButtons
#reg ResetAllButtons  __Instance__ResetAllButtons


#defpou prgMain
  bool tempFourthFloor,
  bool tempThirdFloor,
  bool tempSecondFloor

 
#srcfile 'C:\USERS\IGNáC\DOCUMENTS\PLC\WINTER_PLC\07_VYTAH\PRGMAIN.ST'
#pou ResetAllButtons
#srcline 1 ;FUNCTION ResetAllButtons : BOOL
P     61
ResetAllButtons_L0:
 LINK 0
 NXT
; Initialize - variables
 LD   0
 WRX  __fc__ResetAllButtons
; End initialize - variables
#srcline 2 ;  fifthFloorButtonPressed          := FALSE;
 LD   bool 0       ; false
 WR   fifthFloorButtonPressed
#debug_left bool fifthFloorButtonPressed
#srcline 3 ;  fourthFloorButtonPressed         := FALSE;
 LD   bool 0       ; false
 WR   fourthFloorButtonPressed
#debug_left bool fourthFloorButtonPressed
#srcline 4 ;  thirdFloorButtonPressed          := FALSE;
 LD   bool 0       ; false
 WR   thirdFloorButtonPressed
#debug_left bool thirdFloorButtonPressed
#srcline 5 ;  secondFloorButtonPressed         := FALSE;
 LD   bool 0       ; false
 WR   secondFloorButtonPressed
#debug_left bool secondFloorButtonPressed
#srcline 6 ;  firstFloorButtonPressed          := FALSE;
 LD   bool 0       ; false
 WR   firstFloorButtonPressed
#debug_left bool firstFloorButtonPressed
#srcline 7 ;  elevatorFifthFloorButtonPressed  := FALSE;
 LD   bool 0       ; false
 WR   elevatorFifthFloorButtonPressed
#debug_left bool elevatorFifthFloorButtonPressed
#srcline 8 ;  elevatorFourthFloorButtonPressed := FALSE;
 LD   bool 0       ; false
 WR   elevatorFourthFloorButtonPressed
#debug_left bool elevatorFourthFloorButtonPressed
#srcline 9 ;  elevatorThirdFloorButtonPressed  := FALSE;
 LD   bool 0       ; false
 WR   elevatorThirdFloorButtonPressed
#debug_left bool elevatorThirdFloorButtonPressed
#srcline 10 ;  elevatorSecondFloorButtonPressed := FALSE;
 LD   bool 0       ; false
 WR   elevatorSecondFloorButtonPressed
#debug_left bool elevatorSecondFloorButtonPressed
#srcline 11 ;  elevatorFirstFloorButtonPressed  := FALSE;
 LD   bool 0       ; false
 WR   elevatorFirstFloorButtonPressed
#debug_left bool elevatorFirstFloorButtonPressed
#srcline 12 ;END_FUNCTION
 PRV  
 LDX  __fc__ResetAllButtons
 ULNK
RET
E     61
#endpou 

#pou prgMain
#srcline 14 ;PROGRAM prgMain

#struct prgMain__temp__
  dint P0__st__
P     61
prgMain_L0:
 LINK __SizeOf(prgMain__temp__)
; Initialize - dynamic variables
; End initialize - dynamic variables
#srcline 27 ;  HandleObstacles();
 LEA  __Instance__HandleObstacles
 CAL  HandleObstacles_L0
#srcline 28 ;  HandleButtonPress();
 LEA  __Instance__HandleButtonPress
 CAL  HandleButtonPress_L0
#srcline 29 ;  HandleDoors();
 LEA  __Instance__HandleDoors
 CAL  HandleDoors_L0
#srcline 30 ;  stopSignActivated := elevatorButtonStopPressed OR
 LD   elevatorButtonStopPressed
#debug bool elevatorButtonStopPressed
#srcline 31 ;    elevatorWeight > elevatorMaximumWeight OR
 LD   elevatorWeight
#debug int elevatorWeight
 EXTW 
 LD   elevatorMaximumWeight
#debug int elevatorMaximumWeight
 EXTW 
 GTS
 OR  
#srcline 32 ;    anyObstacleDetected;
 LD   anyObstacleDetected
#debug bool anyObstacleDetected
 OR  
 WR   stopSignActivated
#debug_left bool stopSignActivated
#srcline 33 ;  
#srcline 34 ;  elevatorWeight := ABS(elevatorWeight);
 LD   elevatorWeight
#debug int elevatorWeight
 EXTW 
 ABSL
 WR   elevatorWeight
#debug_left int elevatorWeight
#srcline 35 ;  
#srcline 36 ;  forceOpenDoors := 
#srcline 37 ;      NOT elevatorButtonStopPressed 
#srcline 38 ;    AND
 LD   elevatorButtonStopPressed
#debug bool elevatorButtonStopPressed
 NEG
#srcline 39 ;      elevatorWeight <= elevatorMaximumWeight 
 LD   elevatorWeight
#debug int elevatorWeight
 EXTW 
#srcline 40 ;    AND 
 LD   elevatorMaximumWeight
#debug int elevatorMaximumWeight
 EXTW 
 GTS
 NEG
 AND
#srcline 41 ;      NOT anyObstacleDetected;
 LD   anyObstacleDetected
#debug bool anyObstacleDetected
 NEG
 AND
 WR   forceOpenDoors
#debug_left bool forceOpenDoors
#srcline 43 ;  CASE switchCase OF
 LD   switchCase
#debug int switchCase
 EXTW 
 WRY  P0__st__
 LD   0
 LDY  P0__st__
 EQ  
 JMC  prgMain_L2
#srcline 44 ;    0: // timer
#srcline 45 ;      timeDelayed := timePLC + elevatorFloorTravelTime;
 LD   timePLC
#debug int timePLC
 EXTW 
 LD   elevatorFloorTravelTime
#debug int elevatorFloorTravelTime
 EXTW 
 ADD
 EXTW
 WR   timeDelayed
#debug_left int timeDelayed
#srcline 46 ;      switchCase := 1;
 LD   int 1
 WR   switchCase
#debug_left int switchCase
 JMP  prgMain_L1
prgMain_L2:
 LD   1
 LDY  P0__st__
 EQ  
 JMC  prgMain_L3
#srcline 47 ;    1: // elevator handler
#srcline 48 ;      IF timeDelayed = timePLC THEN
 LD   timeDelayed
#debug int timeDelayed
 EXTW 
 LD   timePLC
#debug int timePLC
 EXTW 
 EQ
 JMC  prgMain_L4
#srcline 49 ;         IF waitingForDoors THEN
 LD   waitingForDoors
#debug bool waitingForDoors
 JMC  prgMain_L6
#srcline 50 ;            timeDelayed := timePLC + elevatorFloorDoorsOpenTime;
 LD   timePLC
#debug int timePLC
 EXTW 
 LD   elevatorFloorDoorsOpenTime
#debug int elevatorFloorDoorsOpenTime
 EXTW 
 ADD
 EXTW
 WR   timeDelayed
#debug_left int timeDelayed
#srcline 51 ;            switchCase := 2;
 LD   int 2
 WR   switchCase
#debug_left int switchCase
#srcline 52 ;          ELSE
 JMP  prgMain_L7
prgMain_L6:
#srcline 53 ;            IF forceOpenDoors THEN
 LD   forceOpenDoors
#debug bool forceOpenDoors
 JMC  prgMain_L8
#srcline 54 ;              tempFourthFloor := elevatorFloor = 4 AND anyFourthFloorButtonPressed AND elevatorDirection = -1;
 LD   elevatorFloor
#debug int elevatorFloor
 EXTW 
 LD   int 4
 EQ
 LD   anyFourthFloorButtonPressed
#debug bool anyFourthFloorButtonPressed
 AND
 LD   elevatorDirection
#debug int elevatorDirection
 EXTW 
 LD   int -1
 EQ
 AND
 WRX  tempFourthFloor
#debug_left bool tempFourthFloor
#srcline 55 ;              tempThirdFloor := elevatorFloor = 3 AND anyThirdFloorButtonPressed AND elevatorDirection = -1;
 LD   elevatorFloor
#debug int elevatorFloor
 EXTW 
 LD   int 3
 EQ
 LD   anyThirdFloorButtonPressed
#debug bool anyThirdFloorButtonPressed
 AND
 LD   elevatorDirection
#debug int elevatorDirection
 EXTW 
 LD   int -1
 EQ
 AND
 WRX  tempThirdFloor
#debug_left bool tempThirdFloor
#srcline 56 ;              tempSecondFloor := elevatorFloor = 2 AND anySecondFloorButtonPressed AND elevatorDirection = -1;
 LD   elevatorFloor
#debug int elevatorFloor
 EXTW 
 LD   int 2
 EQ
 LD   anySecondFloorButtonPressed
#debug bool anySecondFloorButtonPressed
 AND
 LD   elevatorDirection
#debug int elevatorDirection
 EXTW 
 LD   int -1
 EQ
 AND
 WRX  tempSecondFloor
#debug_left bool tempSecondFloor
#srcline 57 ;              IF (
#srcline 58 ;                  anyObstacleWasDetected 
#srcline 59 ;                OR
 LD   anyObstacleWasDetected
#debug bool anyObstacleWasDetected
#srcline 60 ;                  tempFourthFloor
#srcline 61 ;                OR
 LDX  tempFourthFloor
#debug bool tempFourthFloor
 OR  
#srcline 62 ;                  tempThirdFloor
#srcline 63 ;                OR
 LDX  tempThirdFloor
#debug bool tempThirdFloor
 OR  
#srcline 64 ;                  tempSecondFloor
#srcline 65 ;              ) THEN
 LDX  tempSecondFloor
#debug bool tempSecondFloor
 OR  
 JMC  prgMain_L10
#srcline 66 ;                switchCase := 2;
 LD   int 2
 WR   switchCase
#debug_left int switchCase
#srcline 67 ;                timeDelayed := timePLC + elevatorFloorDoorsOpenTime;
 LD   timePLC
#debug int timePLC
 EXTW 
 LD   elevatorFloorDoorsOpenTime
#debug int elevatorFloorDoorsOpenTime
 EXTW 
 ADD
 EXTW
 WR   timeDelayed
#debug_left int timeDelayed
#srcline 68 ;                waitingForDoors := TRUE;
 LD   bool -1       ; true
 WR   waitingForDoors
#debug_left bool waitingForDoors
#srcline 69 ;                middleFloorStop := TRUE;
 LD   bool -1       ; true
 WR   middleFloorStop
#debug_left bool middleFloorStop
#srcline 70 ;                IF tempFourthFloor THEN fourthFloorButtonPressed := FALSE; elevatorFourthFloorButtonPressed := FALSE;
 LDX  tempFourthFloor
#debug bool tempFourthFloor
 JMC  prgMain_L12
 LD   bool 0       ; false
 WR   fourthFloorButtonPressed
#debug_left bool fourthFloorButtonPressed
 LD   bool 0       ; false
 WR   elevatorFourthFloorButtonPressed
#debug_left bool elevatorFourthFloorButtonPressed
#srcline 71 ;                ELSIF tempThirdFloor THEN thirdFloorButtonPressed := FALSE; elevatorThirdFloorButtonPressed := FALSE;
 JMP  prgMain_L13
prgMain_L12:
 LDX  tempThirdFloor
#debug bool tempThirdFloor
 JMC  prgMain_L14
 LD   bool 0       ; false
 WR   thirdFloorButtonPressed
#debug_left bool thirdFloorButtonPressed
 LD   bool 0       ; false
 WR   elevatorThirdFloorButtonPressed
#debug_left bool elevatorThirdFloorButtonPressed
#srcline 72 ;                ELSIF tempSecondFloor THEN secondFloorButtonPressed := FALSE; elevatorSecondFloorButtonPressed := FALSE;
 JMP  prgMain_L13
prgMain_L14:
 LDX  tempSecondFloor
#debug bool tempSecondFloor
 JMC  prgMain_L15
 LD   bool 0       ; false
 WR   secondFloorButtonPressed
#debug_left bool secondFloorButtonPressed
 LD   bool 0       ; false
 WR   elevatorSecondFloorButtonPressed
#debug_left bool elevatorSecondFloorButtonPressed
#srcline 73 ;                END_IF;
 JMP  prgMain_L13
prgMain_L15:
prgMain_L13:
#srcline 74 ;              ELSE
 JMP  prgMain_L11
prgMain_L10:
#srcline 75 ;                switchCase := 0;
 LD   int 0
 WR   switchCase
#debug_left int switchCase
#srcline 76 ;                HandleMovement();
 LEA  __Instance__HandleMovement
 CAL  HandleMovement_L0
#srcline 77 ;              END_IF;
prgMain_L11:
#srcline 78 ;            ELSE
 JMP  prgMain_L9
prgMain_L8:
#srcline 79 ;              anyObstacleWasDetected := anyObstacleDetected;
 LD   anyObstacleDetected
#debug bool anyObstacleDetected
 WR   anyObstacleWasDetected
#debug_left bool anyObstacleWasDetected
#srcline 80 ;              switchCase := 0;
 LD   int 0
 WR   switchCase
#debug_left int switchCase
#srcline 81 ;            END_IF;
prgMain_L9:
#srcline 82 ;          END_IF;
prgMain_L7:
#srcline 83 ;        
#srcline 84 ;      END_IF;
prgMain_L4:
 JMP  prgMain_L1
prgMain_L3:
 LD   2
 LDY  P0__st__
 EQ  
 JMC  prgMain_L16
#srcline 85 ; 
#srcline 86 ;    2:
#srcline 87 ;      IF timeDelayed = timePLC THEN
 LD   timeDelayed
#debug int timeDelayed
 EXTW 
 LD   timePLC
#debug int timePLC
 EXTW 
 EQ
 JMC  prgMain_L17
#srcline 88 ;        waitingForDoors := FALSE;
 LD   bool 0       ; false
 WR   waitingForDoors
#debug_left bool waitingForDoors
#srcline 89 ;        switchCase := 1;
 LD   int 1
 WR   switchCase
#debug_left int switchCase
#srcline 90 ;        anyObstacleWasDetected := FALSE;
 LD   bool 0       ; false
 WR   anyObstacleWasDetected
#debug_left bool anyObstacleWasDetected
#srcline 91 ;        middleFloorStop := FALSE;
 LD   bool 0       ; false
 WR   middleFloorStop
#debug_left bool middleFloorStop
#srcline 92 ;      END_IF;
prgMain_L17:
 JMP  prgMain_L1
prgMain_L16:
prgMain_L1:
#srcline 94 ;  
#srcline 95 ;END_PROGRAM
 ULNK
RET
E     61

; Initialize - variables
P     61
prgMain__InstanceInit__:
 LINK 0
 LD   bool 0   ; false
 WRX  tempFourthFloor
 LD   bool 0   ; false
 WRX  tempThirdFloor
 LD   bool 0   ; false
 WRX  tempSecondFloor
 ULNK
RET
E     61
; End initialize - variables
#endpou 



 

#srcfile ''
