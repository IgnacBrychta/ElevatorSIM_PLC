#srcfile 'C:\USERS\IGNáC\DOCUMENTS\PLC\WINTER_PLC\07_VYTAH\HANDLEBUTTONPRESS.ST'

#defpou HandleButtonPress
  bool __fc__HandleButtonPress
#reg HandleButtonPress  __Instance__HandleButtonPress

 
#srcfile 'C:\USERS\IGNáC\DOCUMENTS\PLC\WINTER_PLC\07_VYTAH\HANDLEBUTTONPRESS.ST'
#pou HandleButtonPress
#srcline 1 ;FUNCTION HandleButtonPress : BOOL
P     61
HandleButtonPress_L0:
 LINK 0
 NXT
; Initialize - variables
 LD   0
 WRX  __fc__HandleButtonPress
; End initialize - variables
#srcline 12 ;    anyFirstFloorButtonPressed :=
#srcline 13 ;      elevatorFirstFloorButtonPressed OR
 LD   elevatorFirstFloorButtonPressed
#debug bool elevatorFirstFloorButtonPressed
#srcline 14 ;      firstFloorButtonPressed;
 LD   firstFloorButtonPressed
#debug bool firstFloorButtonPressed
 OR  
 WR   anyFirstFloorButtonPressed
#debug_left bool anyFirstFloorButtonPressed
#srcline 15 ;    anySecondFloorButtonPressed :=
#srcline 16 ;      elevatorSecondFloorButtonPressed OR
 LD   elevatorSecondFloorButtonPressed
#debug bool elevatorSecondFloorButtonPressed
#srcline 17 ;      secondFloorButtonPressed;
 LD   secondFloorButtonPressed
#debug bool secondFloorButtonPressed
 OR  
 WR   anySecondFloorButtonPressed
#debug_left bool anySecondFloorButtonPressed
#srcline 18 ;    anyThirdFloorButtonPressed :=
#srcline 19 ;      elevatorThirdFloorButtonPressed OR
 LD   elevatorThirdFloorButtonPressed
#debug bool elevatorThirdFloorButtonPressed
#srcline 20 ;      thirdFloorButtonPressed;
 LD   thirdFloorButtonPressed
#debug bool thirdFloorButtonPressed
 OR  
 WR   anyThirdFloorButtonPressed
#debug_left bool anyThirdFloorButtonPressed
#srcline 21 ;    anyFourthFloorButtonPressed := 
#srcline 22 ;      elevatorFourthFloorButtonPressed OR
 LD   elevatorFourthFloorButtonPressed
#debug bool elevatorFourthFloorButtonPressed
#srcline 23 ;      fourthFloorButtonPressed;
 LD   fourthFloorButtonPressed
#debug bool fourthFloorButtonPressed
 OR  
 WR   anyFourthFloorButtonPressed
#debug_left bool anyFourthFloorButtonPressed
#srcline 24 ;    anyFifthFloorButtonPressed := 
#srcline 25 ;      elevatorFifthFloorButtonPressed OR
 LD   elevatorFifthFloorButtonPressed
#debug bool elevatorFifthFloorButtonPressed
#srcline 26 ;      fifthFloorButtonPressed;
 LD   fifthFloorButtonPressed
#debug bool fifthFloorButtonPressed
 OR  
 WR   anyFifthFloorButtonPressed
#debug_left bool anyFifthFloorButtonPressed
#srcline 27 ;    anyFloorButtonPressed := 
#srcline 28 ;      anyFirstFloorButtonPressed OR
 LD   anyFirstFloorButtonPressed
#debug bool anyFirstFloorButtonPressed
#srcline 29 ;      anySecondFloorButtonPressed OR 
 LD   anySecondFloorButtonPressed
#debug bool anySecondFloorButtonPressed
 OR  
#srcline 30 ;      anyThirdFloorButtonPressed OR 
 LD   anyThirdFloorButtonPressed
#debug bool anyThirdFloorButtonPressed
 OR  
#srcline 31 ;      anyFourthFloorButtonPressed OR
 LD   anyFourthFloorButtonPressed
#debug bool anyFourthFloorButtonPressed
 OR  
#srcline 32 ;      anyFifthFloorButtonPressed;
 LD   anyFifthFloorButtonPressed
#debug bool anyFifthFloorButtonPressed
 OR  
 WR   anyFloorButtonPressed
#debug_left bool anyFloorButtonPressed
#srcline 33 ;  IF NOT inputLocked THEN
 LD   inputLocked
#debug bool inputLocked
 NEG
 JMC  HandleButtonPress_L1
#srcline 34 ;    IF anyFifthFloorButtonPressed THEN
 LD   anyFifthFloorButtonPressed
#debug bool anyFifthFloorButtonPressed
 JMC  HandleButtonPress_L3
#srcline 35 ;      targetFloor := 5;
 LD   int 5
 WR   targetFloor
#debug_left int targetFloor
#srcline 36 ;    ELSIF anyFourthFloorButtonPressed THEN
 JMP  HandleButtonPress_L4
HandleButtonPress_L3:
 LD   anyFourthFloorButtonPressed
#debug bool anyFourthFloorButtonPressed
 JMC  HandleButtonPress_L5
#srcline 37 ;      targetFloor := 4;
 LD   int 4
 WR   targetFloor
#debug_left int targetFloor
#srcline 38 ;    ELSIF anyThirdFloorButtonPressed THEN
 JMP  HandleButtonPress_L4
HandleButtonPress_L5:
 LD   anyThirdFloorButtonPressed
#debug bool anyThirdFloorButtonPressed
 JMC  HandleButtonPress_L6
#srcline 39 ;      targetFloor := 3;
 LD   int 3
 WR   targetFloor
#debug_left int targetFloor
#srcline 40 ;    ELSIF anySecondFloorButtonPressed THEN
 JMP  HandleButtonPress_L4
HandleButtonPress_L6:
 LD   anySecondFloorButtonPressed
#debug bool anySecondFloorButtonPressed
 JMC  HandleButtonPress_L7
#srcline 41 ;      targetFloor := 2;
 LD   int 2
 WR   targetFloor
#debug_left int targetFloor
#srcline 42 ;    ELSIF anyFirstFloorButtonPressed THEN
 JMP  HandleButtonPress_L4
HandleButtonPress_L7:
 LD   anyFirstFloorButtonPressed
#debug bool anyFirstFloorButtonPressed
 JMC  HandleButtonPress_L8
#srcline 43 ;      targetFloor := 1;
 LD   int 1
 WR   targetFloor
#debug_left int targetFloor
#srcline 44 ;    END_IF;
 JMP  HandleButtonPress_L4
HandleButtonPress_L8:
HandleButtonPress_L4:
#srcline 46 ;    IF NOT targetFloor = targetFloorDefaultValue THEN
 LD   targetFloor
#debug int targetFloor
 EXTW 
 LD   targetFloorDefaultValue
#debug int targetFloorDefaultValue
 EXTW 
 EQ
 NEG
 JMC  HandleButtonPress_L9
#srcline 47 ;      floorDifference := elevatorFloor - targetFloor;
 LD   elevatorFloor
#debug int elevatorFloor
 EXTW 
 LD   targetFloor
#debug int targetFloor
 EXTW 
 SUB
 EXTW
 WR   floorDifference
#debug_left int floorDifference
#srcline 48 ;      IF floorDifference = 0 THEN
 LD   floorDifference
#debug int floorDifference
 EXTW 
 LD   int 0
 EQ
 JMC  HandleButtonPress_L11
#srcline 49 ;        // if the user pressed an elevator button on the
#srcline 50 ;        // same floor the elevator is at
#srcline 51 ;        fifthFloorButtonPressed          := FALSE;
 LD   bool 0       ; false
 WR   fifthFloorButtonPressed
#debug_left bool fifthFloorButtonPressed
#srcline 52 ;        fourthFloorButtonPressed         := FALSE;
 LD   bool 0       ; false
 WR   fourthFloorButtonPressed
#debug_left bool fourthFloorButtonPressed
#srcline 53 ;        thirdFloorButtonPressed          := FALSE;
 LD   bool 0       ; false
 WR   thirdFloorButtonPressed
#debug_left bool thirdFloorButtonPressed
#srcline 54 ;        secondFloorButtonPressed         := FALSE;
 LD   bool 0       ; false
 WR   secondFloorButtonPressed
#debug_left bool secondFloorButtonPressed
#srcline 55 ;        firstFloorButtonPressed          := FALSE;
 LD   bool 0       ; false
 WR   firstFloorButtonPressed
#debug_left bool firstFloorButtonPressed
#srcline 56 ;        elevatorFifthFloorButtonPressed  := FALSE;
 LD   bool 0       ; false
 WR   elevatorFifthFloorButtonPressed
#debug_left bool elevatorFifthFloorButtonPressed
#srcline 57 ;        elevatorFourthFloorButtonPressed := FALSE;
 LD   bool 0       ; false
 WR   elevatorFourthFloorButtonPressed
#debug_left bool elevatorFourthFloorButtonPressed
#srcline 58 ;        elevatorThirdFloorButtonPressed  := FALSE;
 LD   bool 0       ; false
 WR   elevatorThirdFloorButtonPressed
#debug_left bool elevatorThirdFloorButtonPressed
#srcline 59 ;        elevatorSecondFloorButtonPressed := FALSE;
 LD   bool 0       ; false
 WR   elevatorSecondFloorButtonPressed
#debug_left bool elevatorSecondFloorButtonPressed
#srcline 60 ;        elevatorFirstFloorButtonPressed  := FALSE;
 LD   bool 0       ; false
 WR   elevatorFirstFloorButtonPressed
#debug_left bool elevatorFirstFloorButtonPressed
#srcline 61 ;      ELSIF floorDifference > 0 THEN
 JMP  HandleButtonPress_L12
HandleButtonPress_L11:
 LD   floorDifference
#debug int floorDifference
 EXTW 
 LD   int 0
 GTS
 JMC  HandleButtonPress_L13
#srcline 62 ;        elevatorDirection := -1;
 LD   int -1
 WR   elevatorDirection
#debug_left int elevatorDirection
#srcline 63 ;        inputLocked := TRUE;
 LD   bool -1       ; true
 WR   inputLocked
#debug_left bool inputLocked
#srcline 64 ;        waitingForDoors := TRUE;
 LD   bool -1       ; true
 WR   waitingForDoors
#debug_left bool waitingForDoors
#srcline 65 ;      ELSIF floorDifference < 0 THEN
 JMP  HandleButtonPress_L12
HandleButtonPress_L13:
 LD   floorDifference
#debug int floorDifference
 EXTW 
 LD   int 0
 LTS
 JMC  HandleButtonPress_L14
#srcline 66 ;        elevatorDirection := 1;
 LD   int 1
 WR   elevatorDirection
#debug_left int elevatorDirection
#srcline 67 ;        inputLocked := TRUE;
 LD   bool -1       ; true
 WR   inputLocked
#debug_left bool inputLocked
#srcline 68 ;        waitingForDoors := TRUE;
 LD   bool -1       ; true
 WR   waitingForDoors
#debug_left bool waitingForDoors
#srcline 69 ;      END_IF;
 JMP  HandleButtonPress_L12
HandleButtonPress_L14:
HandleButtonPress_L12:
#srcline 70 ;      floorDifference := ABS(floorDifference);
 LD   floorDifference
#debug int floorDifference
 EXTW 
 ABSL
 WR   floorDifference
#debug_left int floorDifference
#srcline 71 ;    END_IF;
HandleButtonPress_L9:
#srcline 72 ;  END_IF;
HandleButtonPress_L1:
#srcline 73 ;END_FUNCTION
 PRV  
 LDX  __fc__HandleButtonPress
 ULNK
RET
E     61
#endpou 



 

#srcfile ''
