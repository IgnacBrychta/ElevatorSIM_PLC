FUNCTION ResetAllButtons : BOOL
  fifthFloorButtonPressed          := FALSE;
  fourthFloorButtonPressed         := FALSE;
  thirdFloorButtonPressed          := FALSE;
  secondFloorButtonPressed         := FALSE;
  firstFloorButtonPressed          := FALSE;
  elevatorFifthFloorButtonPressed  := FALSE;
  elevatorFourthFloorButtonPressed := FALSE;
  elevatorThirdFloorButtonPressed  := FALSE;
  elevatorSecondFloorButtonPressed := FALSE;
  elevatorFirstFloorButtonPressed  := FALSE;
END_FUNCTION

PROGRAM prgMain
  VAR_INPUT
  END_VAR
  VAR_OUTPUT
  END_VAR
  VAR
  END_VAR
  VAR_TEMP
  END_VAR
  
  HandleObstacles();
  HandleButtonPress();
  HandleDoors();
  stopSignActivated := elevatorButtonStopPressed OR
    elevatorWeight > elevatorMaximumWeight OR
    anyObstacleDetected;
  elevatorWeight := ABS(elevatorWeight);

  CASE switchCase OF
    0: // timer
      timeDelayed := timePLC + elevatorFloorTravelTime;
      switchCase := 1;
    1: // elevator handler
      IF timeDelayed = timePLC THEN
         IF waitingForDoors THEN
            timeDelayed := timePLC + elevatorFloorDoorsOpenTime;
            switchCase := 2;
          ELSE
            IF NOT elevatorButtonStopPressed AND
              elevatorWeight <= elevatorMaximumWeight AND 
              NOT anyObstacleDetected THEN
              IF anyObstacleWasDetected THEN
                switchCase := 2;
                timeDelayed := timePLC + elevatorFloorDoorsOpenTime;
              ELSE
                // override doors
                fifthFloorElevDoorsOpen := FALSE;
                fourthFloorElevDoorsOpen := FALSE;
                thirdFloorElevDoorsOpen := FALSE;
                secondFloorElevDoorsOpen := FALSE;
                firstFloorElevDoorsOpen := FALSE;
              
                HandleMovement();
                switchCase := 0;
              END_IF;
            ELSE
              anyObstacleWasDetected := anyObstacleDetected;
              // override doors
              IF elevatorFloor = 5 THEN
                fifthFloorElevDoorsOpen := TRUE;
              ELSIF elevatorFloor = 4 THEN
                fourthFloorElevDoorsOpen := TRUE;
              ELSIF elevatorFloor = 3 THEN
                thirdFloorElevDoorsOpen := TRUE;
              ELSIF elevatorFloor = 2 THEN
                secondFloorElevDoorsOpen := TRUE;
              ELSIF elevatorFloor = 1 THEN
                firstFloorElevDoorsOpen := TRUE;
              END_IF;
              switchCase := 0;
            END_IF;
          END_IF;
        
      END_IF;
 
    2: // door handler
      IF timeDelayed = timePLC THEN
        waitingForDoors := FALSE;
        switchCase := 1;
        anyObstacleDetected := FALSE;
      END_IF;
  END_CASE;
  
END_PROGRAM

